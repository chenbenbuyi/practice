<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>buyi.stu</groupId>
    <artifactId>xiaoyuan-minis</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>
    <modules>
        <module>mini-spring</module>
    </modules>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.18</version>
            <!--
            test 打包的时候不会引入，以减少线上部署的大小
            compile  如果没有指定，则默认使用该依赖范围。使用此范围的依赖，在编译，测试，运行着三种classpath都有效
            provided 使用此范围的依赖对于编译和测试都有效，但在运行时无效。典型例子就是servlet-api和此处的lombok编译插件依赖
            runtime  运行时依赖范围。使用此范围的依赖对于测试和运行classpath有效，但在编译主代码是无效。典型例子就是JDBC驱动实现
            import： 只支持pom类型的依赖，而且必须在存在于模块pom.xml的dependencyManagement配置区内。试想以下场景：在继承了SpringBoot的所有依赖作为父级依赖后，想引入SpringCloud的相关依赖
             但是pom.xml 只能单继承不能多继承问题，而一个一个导入依赖又很麻烦而且会是pom文件过大，于是你看到基本所有引入Spring Cloud的依赖中都用到了import类型的scope。
             简单理解，import就相当于一个占位符，占位的部分表示引入了相关依赖的全部依赖，而且这个依赖引入不会进行传递
            -->
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.10</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>29.0-jre</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/cn.hutool/hutool-all -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.3.10</version>
        </dependency>

    </dependencies>


</project>